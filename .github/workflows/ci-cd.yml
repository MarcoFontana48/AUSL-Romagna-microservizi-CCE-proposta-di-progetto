name: ci-cd

on:
  push:
    branches: [ dev, master ]
  pull_request:
    branches: [ dev, master ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_REPOSITORY: marcofontana17/ausl_cce_prototipo

jobs:
  build-and-test:
    strategy:
      matrix:
        os:
          - ubuntu-24.04
          - macos-14
          - windows-2022
        java-version: [23]
        java-distribution: [temurin]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ matrix.java-version }}-${{ matrix.java-distribution }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v5.0.0

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build using Gradle
        uses: DanySK/build-check-deploy-gradle-action@4.0.10
        with:
#          pre-build-command: |
#            echo -n "${{ secrets.DB_PASSWORD }}" > db-password.txt
#            echo -n "${{ secrets.DB_ROOT_PASSWORD }}" > db-root-password.txt
          java-version: ${{ matrix.java-version }}
          java-distribution: ${{ matrix.java-distribution }}
          should-run-codecov: false
          retries-on-failure: 3
          check-command: ":"

  publish-docker-images:
    needs: build-and-test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: "api_gateway"
            dockerfile: "./api_gateway/Dockerfile"
            suffix: "api_gateway"
          - name: "service"
            dockerfile: "./service/Dockerfile"
            suffix: "service"
          - name: "terapia"
            dockerfile: "./terapia/Dockerfile"
            suffix: "terapia"
          - name: "diario_clinico"
            dockerfile: "./diario_clinico/Dockerfile"
            suffix: "diario_clinico"
          - name: "anamnesi_pregressa"
            dockerfile: "./anamnesi_pregressa/Dockerfile"
            suffix: "anamnesi_pregressa"
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Build service ${{ matrix.service.name }}
        uses: DanySK/build-check-deploy-gradle-action@4.0.10
        with:
          java-version: 23
          java-distribution: temurin
          should-run-codecov: false
          build-command: ./gradlew :${{ matrix.service.name }}:shadowJar --no-daemon
          check-command: ":"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata for ${{ matrix.service.name }}
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_REPOSITORY }}
          tags: |
            type=raw,value=${{ matrix.service.suffix }}-latest,enable=${{ github.ref == 'refs/heads/master' }}
            type=raw,value=${{ matrix.service.suffix }}-dev-latest,enable=${{ github.ref == 'refs/heads/dev' }}
            type=sha,prefix=${{ github.ref_name }}-,suffix=-${{ matrix.service.suffix }}

      - name: Build and push ${{ matrix.service.name }}
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ${{ matrix.service.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  release:
    name: Release
    needs: publish-docker-images
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v5
        with:
          node-version: "lts/*"
      - name: Install dependencies
        run: npm install
      - name: Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release