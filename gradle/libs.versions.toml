# Version catalog is a central place for you to declare and version dependencies
# https://docs.gradle.org/current/userguide/platforms.html#sub:version-catalog
# https://docs.gradle.org/current/userguide/platforms.html#sub::toml-dependencies-format

[versions]
kotlin = "2.2.20"
kotlinxDatetime = "0.7.1-0.6.x-compat"
kotlinxSerializationJSON = "1.9.0"
kotlinxCoroutines = "1.10.2"
shadowjar-version = "8.1.1"
log4j = "2.25.1"
kotest = "6.0.3"
mockito = "5.19.0"
ktlint = "10.3.0"
archunit-version = "1.4.1"
vertx = "4.5.21"
jackson = "2.20.0"
typescript-gradle-plugin-version = "4.3.5"
kover = "0.9.1"
junit-version = "5.13.4"
mysql-version = "8.0.33"
task-tree-version = "4.0.0"
springBoot = "3.5.5"
springCloud = "2023.0.3"
micrometer = "1.15.4"
mongodb = "5.5.1"
hapi-fhir = "8.4.0"

[libraries]
kotlinGradlePlugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinxDatetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinxDatetime" }
kotlinxSerialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinxSerializationJSON" }
kotlinxCoroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinxCoroutines" }
log4j-api = { module = "org.apache.logging.log4j:log4j-api", version.ref = "log4j" }
log4j-core = { module = "org.apache.logging.log4j:log4j-core", version.ref = "log4j" }
archunit = { module = "com.tngtech.archunit:archunit", version.ref = "archunit-version" }
vertx-core = { module = "io.vertx:vertx-core", version.ref = "vertx" }
vertx-web = { module = "io.vertx:vertx-web", version.ref = "vertx" }
vertx-web-client = { module = "io.vertx:vertx-web-client", version.ref = "vertx" }
vertx-kafka-client = { module = "io.vertx:vertx-kafka-client", version.ref = "vertx" }
vertx-circuit-breaker = { module = "io.vertx:vertx-circuit-breaker", version.ref = "vertx" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-databind", version.ref = "jackson" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
junit = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit-version" }
kotest-junit5-jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotest-assertions-core-jvm = { module = "io.kotest:kotest-assertions-core-jvm", version.ref = "kotest" }
mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
spring-boot-starter-webflux = { module = "org.springframework.boot:spring-boot-starter-webflux", version.ref = "springBoot" }
spring-boot-starter-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "springBoot" }
spring-boot-configuration-processor = { module = "org.springframework.boot:spring-boot-configuration-processor", version.ref = "springBoot" }
spring-cloud-starter-circuitbreaker-resilience4j = { module = "org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j" }
spring-cloud-starter-gateway = { module = "org.springframework.cloud:spring-cloud-starter-gateway" }
junit-jupiter-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit-version" }
junit-jupiter-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit-version" }
log4j-slf4j-impl = { module = "org.apache.logging.log4j:log4j-slf4j-impl", version = "2.25.1" }
micrometer-core = { module = "io.micrometer:micrometer-core", version.ref = "micrometer" }
micrometer-registry-prometheus = { module = "io.micrometer:micrometer-registry-prometheus", version.ref = "micrometer" }
micrometer-registry-jmx = { module = "io.micrometer:micrometer-registry-jmx", version.ref = "micrometer" }
mongodb-driver-sync = { module = "org.mongodb:mongodb-driver-sync", version.ref = "mongodb" }
mongodb-driver-kotlin-coroutine = { module = "org.mongodb:mongodb-driver-kotlin-coroutine", version.ref = "mongodb" }
bson-kotlin = { module = "org.mongodb:bson-kotlin", version.ref = "mongodb" }
hapi-fhir-client = { module = "ca.uhn.hapi.fhir:hapi-fhir-client", version.ref = "hapi-fhir" }
hapi-fhir-structures-r4 = { module = "ca.uhn.hapi.fhir:hapi-fhir-structures-r4", version.ref = "hapi-fhir" }
hapi-fhir-structures-dstu3 = { module = "ca.uhn.hapi.fhir:hapi-fhir-structures-dstu3", version.ref = "hapi-fhir" }
hapi-fhir-validation = { module = "ca.uhn.hapi.fhir:hapi-fhir-validation", version.ref = "hapi-fhir" }
hapi-fhir-validation-resources = { module = "ca.uhn.hapi.fhir:hapi-fhir-validation-resources-r4", version.ref = "hapi-fhir" }

[bundles]
kotlinxEcosystem = ["kotlinxDatetime", "kotlinxSerialization", "kotlinxCoroutines"]
kotlin-testing = ["kotest-junit5-jvm", "kotest-assertions-core-jvm", "mockito-core"]
spring-boot-webflux = ["spring-boot-starter-webflux", "spring-boot-configuration-processor"]
spring-cloud-gateway = ["spring-cloud-starter-gateway", "spring-cloud-starter-circuitbreaker-resilience4j"]
junit-testing = ["junit-jupiter-api", "junit-jupiter-params"]
micrometer = ["micrometer-core", "micrometer-registry-prometheus", "micrometer-registry-jmx"]
mongodb = ["mongodb-driver-sync", "bson-kotlin"]
hapi-fhir = ["hapi-fhir-client", "hapi-fhir-structures-r4", "hapi-fhir-structures-dstu3", "hapi-fhir-validation", "hapi-fhir-validation-resources"]

[plugins]
kotlinPluginSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
shadowjar = { id = "com.github.johnrengelman.shadow", version.ref = "shadowjar-version" }
springBoot = { id = "org.springframework.boot", version.ref = "springBoot" }
springDependencyManagement = { id = "io.spring.dependency-management", version = "1.1.7" }